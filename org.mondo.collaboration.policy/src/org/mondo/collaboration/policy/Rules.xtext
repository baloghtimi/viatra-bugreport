grammar org.mondo.collaboration.policy.Rules with org.eclipse.xtext.common.Terminals

generate rules "http://www.mondo.org/collaboration/policy/Rules"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/viatra/query/patternlanguage/emf/PatternLanguage" as vql

AccessControlModel:
	imports+=Import*
	roles+=Role*
	policy=Policy;
	
Import:
	'import' importURI=STRING;
	
Role:
	User | Group;
	
User:
	'user' name=ID;
	
Group:
	'group' name=ID '{'  roles+=[Role] (',' roles+=[Role])* '}';
	
Policy:
	'policy' name=ID access=AccessibilityLevel 'by' 'default' '{'
	rules+=Rule*
	'}' 'with' resolution=ResolutionType 'resolution';
	
Rule:
	'rule' name=ID access=AccessibilityLevel (operation=OperationType)? 'to' roles+=[Role] (',' roles+=[Role])* '{'
	'from' 'query' pattern=[vql::Pattern|STRING]
	'select' asset=ModelFact
	bindings+=Binding*
	'}' ('with' priority=INT 'priority')?;
	
ModelFact:
	ObjectFact | ReferenceFact | AttributeFact;
	
ObjectFact:
	'obj' '(' variable=[vql::Variable] ')';
	
ReferenceFact:
	'ref' '(' sourceVar=[vql::Variable] '->' targetVar=[vql::Variable] ':' reference=[ecore::EReference] ')';
	
AttributeFact:
	'attr' '(' variable=[vql::Variable] ':' attribute=[ecore::EAttribute] ')';
	
Binding:
	'where' variable=[vql::Variable] 'is' 'bound' 'to' bind=Bind;
	
Bind:
	valueString=STRING | valueInteger=INT | valueEnumLiteral=EnumValue;
	
EnumValue:
    '::' literal=[ecore::EEnumLiteral];
	
enum AccessibilityLevel:
	DENY='deny' | OBFUSCATE='obfuscate' | ALLOW='allow';
	
enum OperationType:
	UNSET='unset' | READ='R' | WRITE='W' | READWRITE='RW';
	
enum ResolutionType:
	RESTRICTIVE='restrictive' | PERMISSIVE='permissive';
