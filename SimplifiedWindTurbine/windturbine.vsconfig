import epackage "http://WTSpec4M/5.0"
import viatra "windturbine.queries.Queries"

/**
 * This configuration is quick to construct based on the metamodel. 
 * It constrains the set of possible values of numbers (reals, integers, etc.) and strings.
 * The only datatype in this metamodel that was not supported is type 'short' - attributes of this type are excluded.
 */

//generate {
//	metamodel = { package WTSpec4M excluding {
//		ControlUnit.cycle,ControlUnit.priority//, //Short
//		//ControlUnit.BhvParams,//String
//		//SystemTimer.value,SystemFault.value,SystemParam.value, //Integer
//		//SystemParam.settable //Boolean
//	}}
//	constraints = { package windturbine.queries }
//	partial-model = { "platform:/resource/SimplifiedWindTurbine/models/AuthorizedWT.xmi"}
//	solver = ViatraSolver
//	scope = {
//		#node += 30..40,
//		# int = {0},
//		# real = {0.1},
//		# string = {"hello"}//,
////		#<Ownership> = 1..*,
////		#<WTCInput> = 1..10,
////		#<WTCOutput> = 1..10,
////		#<Subsystem> = 1..5,
////		#<MainSubsystem> = 1..3,
////		#<ControlUnit> = 1..5,
////		#<SystemParam> = 0..5
//	}
//	
//	config = {
//		log-level = none,
//		"diversity-range" = "1"
//	}
//	
//	number = 30
//	runs = 20
//	
//	debug =			"platform:/resource/SimplifiedWindTurbine/r1/debug"
//	log =			"platform:/resource/SimplifiedWindTurbine/r1/log.txt"
//	output =		"platform:/resource/SimplifiedWindTurbine/r1/models"
//	statistics =	"platform:/resource/SimplifiedWindTurbine/r1/statistics.csv"
//}
//generate {
//	metamodel = { package WTSpec4M excluding {
//		ControlUnit.cycle,ControlUnit.priority//, //Short
//		//ControlUnit.BhvParams,//String
//		//SystemTimer.value,SystemFault.value,SystemParam.value, //Integer
//		//SystemParam.settable //Boolean
//	}}
//	constraints = { package windturbine.queries }
//	partial-model = { "platform:/resource/SimplifiedWindTurbine/models/AuthorizedWT.xmi"}
//	solver = ViatraSolver
//	scope = {
//		#node += 30..40,
//		# int = {0},
//		# real = {0.1},
//		# string = {"hello"}//,
////		#<Ownership> = 1..*,
////		#<WTCInput> = 1..10,
////		#<WTCOutput> = 1..10,
////		#<Subsystem> = 1..5,
////		#<MainSubsystem> = 1..3,
////		#<ControlUnit> = 1..5,
////		#<SystemParam> = 0..5
//	}
//	
//	config = {
//		log-level = none,
//		"diversity-range" = "2"
//	}
//	
//	number = 30
//	runs = 20
//	
//	debug =			"platform:/resource/SimplifiedWindTurbine/r2/debug"
//	log =			"platform:/resource/SimplifiedWindTurbine/r2/log.txt"
//	output =		"platform:/resource/SimplifiedWindTurbine/r2/models"
//	statistics =	"platform:/resource/SimplifiedWindTurbine/r2/statistics.csv"
//}
//generate {
//	metamodel = { package WTSpec4M excluding {
//		ControlUnit.cycle,ControlUnit.priority//, //Short
//		//ControlUnit.BhvParams,//String
//		//SystemTimer.value,SystemFault.value,SystemParam.value, //Integer
//		//SystemParam.settable //Boolean
//	}}
//	constraints = { package windturbine.queries }
//	partial-model = { "platform:/resource/SimplifiedWindTurbine/models/AuthorizedWT.xmi"}
//	solver = ViatraSolver
//	scope = {
//		#node += 30..40,
//		# int = {0},
//		# real = {0.1},
//		# string = {"hello"}//,
////		#<Ownership> = 1..*,
////		#<WTCInput> = 1..10,
////		#<WTCOutput> = 1..10,
////		#<Subsystem> = 1..5,
////		#<MainSubsystem> = 1..3,
////		#<ControlUnit> = 1..5,
////		#<SystemParam> = 0..5
//	}
//	
//	config = {
//		log-level = none,
//		"diversity-range" = "3"
//	}
//	
//	number = 30
//	runs = 20
//	
//	debug =			"platform:/resource/SimplifiedWindTurbine/r3/debug"
//	log =			"platform:/resource/SimplifiedWindTurbine/r3/log.txt"
//	output =		"platform:/resource/SimplifiedWindTurbine/r3/models"
//	statistics =	"platform:/resource/SimplifiedWindTurbine/r3/statistics.csv"
//}

generate {
	metamodel = { package WTSpec4M excluding {
		ControlUnit.cycle,ControlUnit.priority
	}}
	//constraints = { package windturbine.queries }
	partial-model = { "platform:/resource/SimplifiedWindTurbine/models/AuthorizedWT.xmi"}
	solver = AlloySolver
	scope = {
		#node += 35,
		# int = {0},
		# real = {0.1},
		# string = {"hello"}
	}
	
	config = {
		log-level = normal,
		"randomize" = "true",
		"symmetry" = "20"
	}
	
	number = 30
	runs = 20
	
	debug =			"platform:/resource/SimplifiedWindTurbine/a20/debug"
	log =			"platform:/resource/SimplifiedWindTurbine/a20/log.txt"
	output =		"platform:/resource/SimplifiedWindTurbine/a20/models"
	statistics =	"platform:/resource/SimplifiedWindTurbine/a20/statistics.csv"
}
generate {
	metamodel = { package WTSpec4M excluding {
		ControlUnit.cycle,ControlUnit.priority
	}}
	//constraints = { package windturbine.queries }
	partial-model = { "platform:/resource/SimplifiedWindTurbine/models/AuthorizedWT.xmi"}
	solver = AlloySolver
	scope = {
		#node += 35,
		# int = {0},
		# real = {0.1},
		# string = {"hello"}
	}
	
	config = {
		log-level = normal,
		"randomize" = "true",
		"symmetry" = "10"
	}
	
	number = 30
	runs = 20
	
	debug =			"platform:/resource/SimplifiedWindTurbine/a10/debug"
	log =			"platform:/resource/SimplifiedWindTurbine/a10/log.txt"
	output =		"platform:/resource/SimplifiedWindTurbine/a10/models"
	statistics =	"platform:/resource/SimplifiedWindTurbine/a10/statistics.csv"
}
generate {
	metamodel = { package WTSpec4M excluding {
		ControlUnit.cycle,ControlUnit.priority
	}}
	//constraints = { package windturbine.queries }
	partial-model = { "platform:/resource/SimplifiedWindTurbine/models/AuthorizedWT.xmi"}
	solver = AlloySolver
	scope = {
		#node += 35,
		# int = {0},
		# real = {0.1},
		# string = {"hello"}
	}
	
	config = {
		log-level = normal,
		"randomize" = "true",
		"symmetry" = "0"
	}
	
	number = 30
	runs = 20
	
	debug =			"platform:/resource/SimplifiedWindTurbine/a0/debug"
	log =			"platform:/resource/SimplifiedWindTurbine/a0/log.txt"
	output =		"platform:/resource/SimplifiedWindTurbine/a0/models"
	statistics =	"platform:/resource/SimplifiedWindTurbine/a0/statistics.csv"
}